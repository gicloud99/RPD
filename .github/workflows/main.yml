name: RDP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
            -Name 'fDenyTSConnections' -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
            -Name 'UserAuthentication' -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
            -Name 'SecurityLayer' -Value 0 -Force

          netsh advfirewall firewall delete rule name="RDP-Tailscale" || Write-Host "No existing rule"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389

          Restart-Service -Name TermService -Force

      - name: Create RDP User (tk / mk)
        shell: pwsh
        run: |
          $username = "Datlohehe"
          $password = "OLXQ@1234"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force

          if (-not (Get-LocalUser -Name $username -ErrorAction SilentlyContinue)) {
              New-LocalUser -Name $username -Password $securePass -AccountNeverExpires -Description "User created by GitHub Actions for RDP"
          } else {
              (Get-LocalUser -Name $username) | Set-LocalUser -Password $securePass
          }

          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group "Administrators" -Member $username -ErrorAction SilentlyContinue

          echo "RDP_CREDS=User:$username | Password:$password" >> $env:GITHUB_ENV

      - name: Install Tailscale
        shell: pwsh
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = Join-Path $env:TEMP "tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath -UseBasicParsing
          Start-Process -FilePath "msiexec.exe" -ArgumentList "/i","`"$installerPath`"","/quiet","/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Establish Tailscale Connection
        shell: pwsh
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          $exe = Join-Path $env:ProgramFiles "Tailscale\tailscale.exe"
          & $exe up --authkey=$env:TAILSCALE_AUTH_KEY --hostname=("gh-runner-" + $env:GITHUB_RUN_ID) | Out-Null

          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 12) {
              $ipOut = & $exe ip -4 2>$null
              if ($ipOut) {
                  $tsIP = ($ipOut -split "`n" | Where-Object { $_ -match '^\d{1,3}(\.\d{1,3}){3}$' } | Select-Object -First 1)
              }
              Start-Sleep -Seconds 5
              $retries++
          }

          if (-not $tsIP) {
              Write-Error "Tailscale IP not assigned. Exiting."
              exit 1
          }

          Add-Content -Path $env:GITHUB_ENV -Value ("TAILSCALE_IP=" + $tsIP)

      - name: Verify RDP Accessibility
        shell: pwsh
        run: |
          $tsIP = $env:TAILSCALE_IP
          Write-Host "Tailscale IP: $tsIP"
          $testResult = Test-NetConnection -ComputerName $tsIP -Port 3389 -WarningAction SilentlyContinue
          if (-not $testResult.TcpTestSucceeded) {
              Write-Error "TCP connection to RDP port 3389 failed"
              exit 1
          }
          Write-Host "TCP connectivity to port 3389 successful."

      - name: Maintain Connection (prints credentials)
        shell: pwsh
        run: |
          $creds = (Get-Content -Path $env:GITHUB_ENV | Where-Object { $_ -like 'RDP_CREDS=*' }) -split '=' | Select-Object -Last 1
          $tsIP = $env:TAILSCALE_IP
          Write-Host "`n=== RDP ACCESS ==="
          Write-Host "Address: $tsIP"
          Write-Host "Credentials: $creds"
          Write-Host "==================`n"

          while ($true) {
              Write-Host "[$(Get-Date -Format o)] RDP Active - workflow will run until cancelled."
              Start-Sleep -Seconds 300
          }
